AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Creates infrastructure for Safe to Run

Resources:

  # API Gateway for marshalling and unmarshalling a response
  SafeToRunGateway:
    Type: AWS::Serverless::Api
    Properties:
      TracingEnabled: true
      StageName: Prod
      Auth:
        ApiKeyRequired: true
      DefinitionBody:
        swagger: 2.0
        info:
          version: "1.0"
          title: "Safe to run backend"
        basePath: /
        schemes:
          - "https"
        paths:
          /deviceCheck:
            post:
              produces:
                - "application/json"
              responses:
                "200":
                  description: "200 response"
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SafeToRunBackend.Arn}/invocations
                httpMethod: "POST"
                responses:
                  default:
                    statusCode: "200"
                    responseTemplates:
                      application/json: "#set($allParams = $input.params()) {\"data\": $input.json('$') }"
                passthroughBehavior: "when_no_match"
                contentHandling: "CONVERT_TO_TEXT"
                type: "aws"
          /verifyCheck:
            post:
              produces:
                - "application/json"
              responses:
                "200":
                  description: "200 response"
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SafeToRunBackendVerify.Arn}/invocations
                httpMethod: "POST"
                responses:
                  default:
                    statusCode: "200"
                    responseTemplates:
                      application/json: "#set($allParams = $input.params())  { \"data\": $input.json('$') }"
                passthroughBehavior: "when_no_match"
                contentHandling: "CONVERT_TO_TEXT"
                type: "aws"

  SafeToRunBackend:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: java11
      CodeUri: SafeToRunBackend-0.1-all.jar
      Description: A function used for verifying a device and returning a signed token
      MemorySize: 512
      Handler: io.github.dllewellyn.safetorun.backend.handlers.SafeToRunRequestHandler
      Timeout: 120
      FunctionName: SafeToRun
      Tracing: Active
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
        Hooks:
          PreTraffic: !Ref SafeToRunPreHookHandler
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn:
              Ref:
                JwtSecret

  SafeToRunPreHookHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "codedeploy:PutLifecycleEventHookExecutionStatus"
              Resource:
                !Sub 'arn:${AWS::Partition}:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "lambda:InvokeFunction"
              Resource: !GetAtt SafeToRunBackend.Arn
      Runtime: java11
      CodeUri: SafeToRunBackend-0.1-all.jar
      Description: Pre hook test
      MemorySize: 512
      Handler: io.github.dllewellyn.safetorun.backend.handlers.SafeToRunPreHookHandler
      Timeout: 120
      FunctionName: 'CodeDeployHook_preTrafficHook'

  SafeToRunBackendVerify:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: java11
      CodeUri: SafeToRunBackend-0.1-all.jar
      Description: A function used for verifying a device and returning a signed token
      MemorySize: 512
      Handler: io.github.dllewellyn.safetorun.backend.handlers.SafeToRunVerifyHandler
      Timeout: 120
      FunctionName: SafeToRunVerify
      Tracing: Active
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn:
              Ref:
                JwtSecret

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt SafeToRunBackend.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 'apigateway.amazonaws.com'
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Join [ "", [ "arn:aws:execute-api:", !Ref AWS::Region, ":",  !Ref AWS::AccountId, ":", !Ref SafeToRunGateway,"/Prod/POST/deviceCheck"] ]

  LambdaInvokePermissionVerify:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt SafeToRunBackendVerify.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 'apigateway.amazonaws.com'
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Join [ "", [ "arn:aws:execute-api:", !Ref AWS::Region, ":",  !Ref AWS::AccountId, ":", !Ref SafeToRunGateway,"/Prod/POST/verifyCheck"] ]


  ApiKeyProd:
     Type: AWS::ApiGateway::ApiKey
     Properties:
       Name: ApiKeyProd
       Enabled: 'true'
       StageKeys:
         - RestApiId: !Ref SafeToRunGateway
           StageName: Prod

  JwtSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: JwtSecret
      Description: "Secret for JWT signatures"
      GenerateSecretString:
        SecretStringTemplate: '{}'
        GenerateStringKey: "JwtSecret"
        PasswordLength: 30
        ExcludeCharacters: '"@/\'

  UsagePlan:
     Type: AWS::ApiGateway::UsagePlan
     Properties:
       ApiStages:
         - ApiId: !Ref SafeToRunGateway
           Stage: Prod
       Description: Usage plan for the deployment
       UsagePlanName: UsagePlan

  UsagePlanKeyProd:
     Type: AWS::ApiGateway::UsagePlanKey
     Properties:
       KeyId: !Ref ApiKeyProd
       KeyType: API_KEY
       UsagePlanId: !Ref UsagePlan
Outputs:
  ApiEndpoint:
    Description: "API Endpoint"
    Value: !Sub "https://${SafeToRunGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
