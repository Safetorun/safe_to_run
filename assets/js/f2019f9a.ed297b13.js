"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[725],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return p}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=c(t),p=a,m=f["".concat(u,".").concat(p)]||f[p]||d[p]||o;return t?r.createElement(m,l(l({ref:n},s),{},{components:t})):r.createElement(m,l({ref:n},s))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=f;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8215:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},6396:function(e,n,t){t.d(n,{Z:function(){return f}});var r=t(7462),a=t(7294),o=t(2389),l=t(9443);var i=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(1968),c=t(6010),s="tabItem_vU9c";function d(e){var n,t,o,l=e.lazy,d=e.block,f=e.defaultValue,p=e.values,m=e.groupId,h=e.className,b=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=p?p:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),k=(0,u.lx)(v,(function(e,n){return e.value===n.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===f?f:null!=(n=null!=f?f:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=b[0])?void 0:o.props.value;if(null!==g&&!v.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=i(),w=y.tabGroupChoices,O=y.setTabGroupChoices,C=(0,a.useState)(g),N=C[0],T=C[1],E=[],x=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var S=w[m];null!=S&&S!==N&&v.some((function(e){return e.value===S}))&&T(S)}var B=function(e){var n=e.currentTarget,t=E.indexOf(n),r=v[t].value;r!==N&&(x(n),T(r),null!=m&&O(m,r))},D=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=E.indexOf(e.currentTarget)+1;t=E[r]||E[0];break;case"ArrowLeft":var a=E.indexOf(e.currentTarget)-1;t=E[a]||E[E.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":d},h)},v.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:function(e){return E.push(e)},onKeyDown:D,onFocus:B,onClick:B},o,{className:(0,c.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":N===n})}),null!=t?t:n)}))),l?(0,a.cloneElement)(b.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==N})}))))}function f(e){var n=(0,o.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},7749:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return f},default:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=t(6396),i=t(8215),u=["components"],c={id:"oscheck",title:"OS Check",slug:"/oscheck"},s=void 0,d={unversionedId:"oscheck",id:"oscheck",title:"OS Check",description:"There are the following options for configuration:",source:"@site/docs/oscheck.mdx",sourceDirName:".",slug:"/oscheck",permalink:"/safe_to_run/docs/oscheck",editUrl:"https://github.com/safetorun/safe_to_run/edit/master/docs/docs/oscheck.mdx",tags:[],version:"current",frontMatter:{id:"oscheck",title:"OS Check",slug:"/oscheck"},sidebar:"someSidebar",previous:{title:"Blacklisting apps",permalink:"/safe_to_run/docs/blacklist"},next:{title:"Emulator check",permalink:"/safe_to_run/docs/emulatorcheck"}},f=[{value:"Configuration",id:"configuration",children:[],level:2}],p={toc:f};function m(e){var n=e.components,t=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There are the following options for configuration:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Min OS Version"),(0,o.kt)("li",{parentName:"ul"},"Banned model"),(0,o.kt)("li",{parentName:"ul"},"Banned board"),(0,o.kt)("li",{parentName:"ul"},"Banned bootloader"),(0,o.kt)("li",{parentName:"ul"},"Banned CPUs"),(0,o.kt)("li",{parentName:"ul"},"Banned device"),(0,o.kt)("li",{parentName:"ul"},"Banned hardware"),(0,o.kt)("li",{parentName:"ul"},"Banned host")),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)(l.Z,{defaultValue:"default",values:[{label:"Default",value:"default"},{label:"Reporting",value:"reporting"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"default",mdxType:"TabItem"},(0,o.kt)("p",null,"All the checks we can add:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"minOsVersionCheck(minOSVersion: Int)\nnotManufacturerCheck(manufacturerName: String)\nbannedModelCheck(bannedModel: String)\nbannedBoardCheck(bannedBoard: String)\nbannedCpusCheck(cpuAbi: String)\nbannedBootloaderCheck(bannedBootloader: String)\nbannedDeviceCheck(device: String)\nbannedHardwareCheck(hardware: String)\nbannedHostCheck(host: String)\n")),(0,o.kt)("p",null,"Configuration looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'safeToRun(buildSafeToRunCheckList {\n    add {\n        safeToRunCombinedCheck(\n        listOf(\n            { bannedHardwareCheck("hardware") },\n            { bannedBoardCheck("board") }\n        )\n      )\n    }\n})\n'))),(0,o.kt)(i.Z,{value:"reporting",mdxType:"TabItem"},(0,o.kt)("p",null,"The gist of the configuration is to build a 'Conditional'. We have two rules"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"and")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"or")," (",(0,o.kt)("inlineCode",{parentName:"p"},"with is the same as and"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'// This adds a rule so that both minOsVersion and notManufacturer\n// are failable rules\nfailIf(minOsVersion(22))\nfailIf(notManufacturer("Abc"))\n\n// This rule will not fail if the notManufacturer rule passes\n// because if a single \'unless\' passes, it doesn\'t matter how many\n// failIfs fail\n\n// This will fail if the minOsVersion is 22, or if the\n// manufacturer is "Def" unless the manufacturer is NOT\n// "ABC" in which case it\'ll pass every time\n\nfailIf(minOsVersion(22))\nfailIf(notManufacturer("Def"))\nunless(notManufacturer("Abc")\n\n\n')),(0,o.kt)("p",null,"Here are all the checks you can use :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'minOsVersion(123)\nnotManufacturer("")\nbannedBoard("")\nbannedBootloader("")\nbannedCpus("")\nbannedDevice("")\nbannedHardware("")\nbannedHost("")\nbannedModel("")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'// OS Blacklist version\nosDetectionCheck(\n    conditionalBuilder {\n        with(minOsVersion(22))\n        and(notManufacturer("Abc"))\n    }\n).warn()\n')))))}m.isMDXComponent=!0}}]);