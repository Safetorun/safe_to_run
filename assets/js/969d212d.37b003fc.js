(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{117:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),l=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,m=p["".concat(i,".").concat(d)]||p[d]||f[d]||a;return n?r.a.createElement(m,c(c({ref:t},u),{},{components:n})):r.a.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},97:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return p}));var o=n(3),r=n(7),a=(n(0),n(117)),i=["components"],c={id:"why",title:"Why Safe to Run?",slug:"/"},s={unversionedId:"why",id:"why",isDocsHomePage:!1,title:"Why Safe to Run?",description:"No solution to tamper detection is foolproof, if someone is",source:"@site/docs/why.md",sourceDirName:".",slug:"/",permalink:"/safe_to_run/docs/",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/why.md",version:"current",frontMatter:{id:"why",title:"Why Safe to Run?",slug:"/"},sidebar:"someSidebar",next:{title:"Reporting or default?",permalink:"/safe_to_run/docs/reportingordefault"}},u=[{value:"Motivation",id:"motivation",children:[]},{value:"Terms",id:"terms",children:[{value:"Checks",id:"checks",children:[]},{value:"Reports",id:"reports",children:[]}]}],l={toc:u};function p(e){var t=e.components,n=Object(r.a)(e,i);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"No solution to tamper detection is foolproof, if someone is\nable to decompile your application and push it onto an unsuspecting\ndevice, it is possible remove the functionality of safe to run."),Object(a.b)("p",{parentName:"div"},"This just makes it that much harder..."))),Object(a.b)("h2",{id:"motivation"},"Motivation"),Object(a.b)("p",null,"Safe to run has been developed in order to simplify\ndevelopment of secure android applications. In particular\nthe goal of the project is to provide a simple, configurable\nway for app developers to define when an app should or\nshould not run and a simple way of calling that check."),Object(a.b)("h2",{id:"terms"},"Terms"),Object(a.b)("h3",{id:"checks"},"Checks"),Object(a.b)("p",null,"Safe to run consists of a number of 'checks' which are detailed\nin the documentation. These checks can be configured to 'error' or\n'warn'. What you do in response to a 'failed' check is up to you - for example\nyou might want to throw a runtime exception, or else disable certain features\nof your app"),Object(a.b)("h3",{id:"reports"},"Reports"),Object(a.b)("p",null,"Safe to run checks return a report. This is a sealed class with the following\ndefinition "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-kotlin"},"\nsealed class SafeToRunReport {\n    data class SafeToRunReportFailure(val failureReason: String, val failureMessage: String) : SafeToRunReport()\n    data class SafeToRunReportSuccess(val successMessage: String) : SafeToRunReport()\n    data class MultipleReports(val reports: List<SafeToRunReport>) : SafeToRunReport()\n    data class SafeToRunWarning(val warnReason: String, val warningMessage: String) : SafeToRunReport()\n}\n")),Object(a.b)("p",null,"You can check the result with something like this:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-kotlin"},"val safeToRun = SafeToRun.isSafeToRun()\nthrowIfSomethingFailed(safeToRun)\n\nfun throwIfSomethingFailed(safeToRunReport: SafeToRunReport) {\n    when (safeToRunReport) {\n        is SafeToRunReport.MultipleReports -> safeToRunReport.reports.forEach(::throwIfSomethingFailed)\n        is SafeToRunReport.SafeToRunReportFailure -> throw RuntimeException(safeToRunReport.failureMessage)\n        is SafeToRunReport.SafeToRunReportSuccess ->{} // Nothing\n        is SafeToRunReport.SafeToRunWarning -> {} // It's a good idea to log\n    }\n}\n")))}p.isMDXComponent=!0}}]);