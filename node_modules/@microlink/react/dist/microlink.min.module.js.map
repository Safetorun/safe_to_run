{"version":3,"file":"microlink.min.module.js","sources":["../node_modules/nanoclamp/dist/nanoclamp.m.js","../node_modules/is-localhost-url/index.js","../src/utils/index.js","../src/components/Card/CardText.js","../src/theme.js","../src/context/GlobalState.js","../src/components/Card/CardContent.js","../src/components/Card/CardAnimation.js","../src/components/Card/CardMedia/loader.js","../src/components/Card/CardMedia/Wrap.js","../src/components/Card/CardMedia/Image.js","../src/components/Card/CardEmpty.js","../src/components/Card/CardMedia/Controls/MediaButton.js","../src/components/Card/CardMedia/Controls/FooterControls.js","../src/components/Card/CardMedia/Controls/PlaybackButton.js","../src/components/Card/CardMedia/Controls/ProgressBar/Scrubber.js","../src/components/Card/CardMedia/Controls/ProgressBar/Tooltip.js","../src/components/Card/CardMedia/Controls/ProgressBar/index.js","../src/components/Card/CardMedia/Controls/SeekButton.js","../src/components/Card/CardMedia/Controls/Spinner.js","../src/components/Card/CardMedia/Controls/index.js","../src/components/Card/CardMedia/Video.js","../src/components/Card/CardMedia/index.js","../src/components/Card/CardMedia/Audio.js","../src/components/Card/CardWrap.js","../src/utils/hooks.js","../src/index.js"],"sourcesContent":["import{createElement as e,Component as t}from\"react\";function n(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function u(e,t){return!t||\"object\"!=typeof t&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function a(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=s(e);if(t){var r=s(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return u(this,n)}}var f=function(i){!function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(p,t);var r,s,u,f=a(p);function p(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,p),(t=f.call(this,e)).state={noClamp:!1,text:\".\"},t.element=null,t.original=e.text,t.lineHeight=0,t.start=0,t.middle=0,t.end=0,t.debounced=t.debounce(t.action),t}return r=p,(s=[{key:\"componentDidMount\",value:function(){window.addEventListener(\"resize\",this.debounced),this.props.text&&(this.lineHeight=this.element.clientHeight+1,this.clampLines())}},{key:\"componentWillUnmount\",value:function(){window.removeEventListener(\"resize\",this.debounced)}},{key:\"debounce\",value:function(e){var t,n=this,i=function(){t=null,e.apply(n)};return function(){var r=!t;clearTimeout(t),t=setTimeout(i,n.props.debounce),r&&e.apply(n)}}},{key:\"action\",value:function(){this.original&&this.setState({noClamp:!1},this.clampLines)}},{key:\"clampLines\",value:function(){var e=this,t=this.props,n=t.ellipsis,i=t.lines,r=this.lineHeight*i+1,o=n===p.defaultProps.ellipsis?5:1.2*n.length;for(this.start=0,this.middle=0,this.end=this.original.length;this.start<=this.end;){if(this.middle=Math.floor((this.start+this.end)/2),this.element.innerText=this.original.slice(0,this.middle),this.middle===this.original.length)return void this.setState({text:this.original,noClamp:!0});this.moveMarkers(r)}var s=this.original.slice(0,Math.max(this.middle-o,0)).trim()+n;this.setState({text:s},(function(){e.element.innerText=e.state.text}))}},{key:\"moveMarkers\",value:function(e){this.element.clientHeight<=e?this.start=this.middle+1:this.end=this.middle-1}},{key:\"render\",value:function(){var t=this,n=this.state.text,i=this.props,r=i.accessibility,s=i.is,l=i.text,u=(i.lines,i.debounce,i.ellipsis,c(i,[\"accessibility\",\"is\",\"text\",\"lines\",\"debounce\",\"ellipsis\"])),a=o(o({ref:function(e){return t.element=e}},r?{title:l}:{}),u);return l?e(s,a,n):null}}])&&n(r.prototype,s),u&&n(r,u),p}();f.defaultProps={accessibility:!0,is:\"div\",lines:3,ellipsis:\"…\",debounce:300};export default f;\n//# sourceMappingURL=nanoclamp.m.js.map\n","'use strict'\n\nconst REGEX_LOCALHOST = /^https?:\\/\\/(localhost|127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1)/\n\nmodule.exports = url => REGEX_LOCALHOST.test(url)\n// module.exports.regex = REGEX_LOCALHOST\n","import { fetchFromApi, getApiUrl as createApiUrl } from '@microlink/mql'\nimport isLocalhostUrl from 'is-localhost-url'\nimport { css } from 'styled-components'\n\nexport const isSSR = typeof window === 'undefined'\n\nexport const castArray = value => [].concat(value)\n\nexport const getPreferredMedia = (data, mediaProps) => {\n  let prefer\n\n  for (let index = 0; index < mediaProps.length; index++) {\n    const key = mediaProps[index]\n    const value = data[key]\n    if (!isNil(value)) {\n      prefer = key\n      break\n    }\n  }\n\n  return prefer\n}\n\nexport const isFunction = fn => typeof fn === 'function'\n\nexport const isObject = obj => typeof obj === 'object'\n\nexport const isNil = value => value == null\n\nexport const getUrlPath = data => (isObject(data) ? data.url : data)\n\nexport const someProp = (data, props) =>\n  data[props.find(prop => !isNil(data[prop]))]\n\nexport const media = {\n  mobile: (...args) => css`\n    @media (max-width: 48em) {\n      ${css(...args)};\n    }\n  `,\n  desktop: (...args) => css`\n    @media (min-width: 48em) {\n      ${css(...args)};\n    }\n  `\n}\n\nexport const getApiUrl = ({\n  apiKey,\n  contrast = false,\n  data,\n  endpoint,\n  force,\n  headers,\n  media,\n  prerender,\n  proxy,\n  ttl,\n  url\n}) =>\n  createApiUrl(url, {\n    apiKey,\n    audio: media.includes('audio'),\n    data,\n    endpoint,\n    force,\n    headers,\n    iframe: media.includes('iframe'),\n    palette: contrast,\n    prerender,\n    proxy,\n    screenshot: media.includes('screenshot'),\n    ttl,\n    video: media.includes('video')\n  })\n\nexport { fetchFromApi }\n\nexport const isLarge = cardSize => cardSize === 'large'\n\nexport const isSmall = cardSize => cardSize === 'small'\n\nexport const imageProxy = url =>\n  isLocalhostUrl(url)\n    ? url\n    : `https://images.weserv.nl/?url=${encodeURIComponent(url)}&l=9&af&il&n=-1`\n\nexport const isLazySupported = !isSSR && 'IntersectionObserver' in window\n\nexport const formatSeconds = secs => {\n  const secsToNum = parseInt(secs, 10)\n  const hours = Math.floor(secsToNum / 3600)\n  const minutes = Math.floor(secsToNum / 60) % 60\n  const seconds = secsToNum % 60\n\n  return [hours, minutes, seconds]\n    .filter((v, i) => v > 0 || i > 0)\n    .map(v => (v >= 10 ? v : `0${v}`))\n    .join(':')\n}\n\nexport const clampNumber = (num, min, max) => {\n  switch (true) {\n    case num <= min:\n      return min\n    case num >= max:\n      return max\n    default:\n      return num\n  }\n}\n\nconst BASE_CLASSNAME = 'microlink_card'\nconst CONTENT_BASE_CLASSNAME = `${BASE_CLASSNAME}__content`\nconst MEDIA_BASE_CLASSNAME = `${BASE_CLASSNAME}__media`\nconst CONTROLS_BASE_CLASSNAME = `${MEDIA_BASE_CLASSNAME}__controls`\n\nexport const classNames = {\n  main: BASE_CLASSNAME,\n  content: CONTENT_BASE_CLASSNAME,\n  title: `${CONTENT_BASE_CLASSNAME}_title`,\n  description: `${CONTENT_BASE_CLASSNAME}_description`,\n  url: `${CONTENT_BASE_CLASSNAME}_url`,\n  mediaWrapper: `${MEDIA_BASE_CLASSNAME}_wrapper`,\n  media: MEDIA_BASE_CLASSNAME,\n  image: `${MEDIA_BASE_CLASSNAME}_image`,\n  videoWrapper: `${MEDIA_BASE_CLASSNAME}_video_wrapper`,\n  video: `${MEDIA_BASE_CLASSNAME}_video`,\n  audioWrapper: `${MEDIA_BASE_CLASSNAME}_audio_wrapper`,\n  audio: `${MEDIA_BASE_CLASSNAME}_audio`,\n  mediaControls: CONTROLS_BASE_CLASSNAME,\n  playbackControl: `${CONTROLS_BASE_CLASSNAME}_playback`,\n  volumeControl: `${CONTROLS_BASE_CLASSNAME}_volume`,\n  rwControl: `${CONTROLS_BASE_CLASSNAME}_rewind`,\n  ffwControl: `${CONTROLS_BASE_CLASSNAME}_fast_forward`,\n  rateControl: `${CONTROLS_BASE_CLASSNAME}_rate`,\n  progressBar: `${CONTROLS_BASE_CLASSNAME}_progress_bar`,\n  progressTime: `${CONTROLS_BASE_CLASSNAME}_progress_time`,\n  spinner: `${CONTROLS_BASE_CLASSNAME}_spinner`,\n  iframe: `${BASE_CLASSNAME}__iframe`\n}\n","/* eslint-disable multiline-ternary */\n\nimport React from 'react'\nimport styled, { css } from 'styled-components'\nimport NanoClamp from 'nanoclamp'\n\nimport { isNil } from '../../utils'\n\nconst Clamp = ({ children, className, lines }) =>\n  isNil(children) ? null : (\n    <NanoClamp className={className} lines={lines} text={children} is='p' />\n  )\n\nconst StyledClamp = styled(Clamp)`\n  &&& {\n    text-align: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    color: inherit;\n    margin: 0;\n\n    ${({ useNanoClamp }) =>\n      !useNanoClamp &&\n      css`\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n      `}\n  }\n`\n\nconst CardText = ({ useNanoClamp = true, children, ...props }) => {\n  const textProps = useNanoClamp\n    ? props\n    : { ...props, as: 'p', title: children }\n\n  return (\n    <StyledClamp useNanoClamp={useNanoClamp} {...textProps}>\n      {children}\n    </StyledClamp>\n  )\n}\n\nexport default CardText\n","export const speed = {\n  short: '100ms',\n  medium: '150ms',\n  long: '300ms'\n}\n\nexport const animation = {\n  short: 'cubic-bezier(.25,.8,.25,1)',\n  medium: 'cubic-bezier(.25,.8,.25,1)',\n  long: 'cubic-bezier(.4, 0, .2, 1)'\n}\n\nconst createTransition = (properties, s) => {\n  const suffix = `${speed[s]} ${animation[s]}`\n  return properties.map(property => `${property} ${suffix}`).join(', ')\n}\n\nexport const transition = {\n  short: (...properties) => createTransition(properties, 'short'),\n  medium: (...properties) => createTransition(properties, 'medium'),\n  long: (...properties) => createTransition(properties, 'long')\n}\n\n// https://primer.style/design/foundations/typography\nexport const font = {\n  sans: \"InterUI, -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif\",\n  mono: \"'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace\"\n}\n","import React, { useCallback, useMemo, useState } from 'react'\n\nconst initialState = {}\n\nexport const GlobalContext = React.createContext(initialState)\n\nconst GlobalState = ({\n  autoPlay,\n  children,\n  controls,\n  loop,\n  mediaRef,\n  muted,\n  playsInline,\n  size,\n  ...rest\n}) => {\n  const [state, setState] = useState(initialState)\n\n  const updateState = useCallback(\n    newState => setState(currentState => ({ ...currentState, ...newState })),\n    []\n  )\n\n  const props = useMemo(\n    () => ({\n      autoPlay,\n      controls,\n      loop,\n      mediaRef,\n      muted,\n      playsInline,\n      size\n    }),\n    [autoPlay, controls, loop, mediaRef, muted, playsInline, size]\n  )\n\n  const values = useMemo(\n    () => ({\n      props,\n      state,\n      updateState\n    }),\n    [props, state, updateState]\n  )\n\n  return (\n    <GlobalContext.Provider value={values}>\n      {children(rest)}\n    </GlobalContext.Provider>\n  )\n}\n\nexport default GlobalState\n","/* global URL */\n\nimport React, { useCallback, useMemo, useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport CardText from './CardText'\n\nimport { transition } from '../../theme'\nimport { classNames, media, isLarge, isSmall, isNil } from '../../utils'\nimport { GlobalContext } from '../../context/GlobalState'\n\nconst REGEX_STRIP_WWW = /^www\\./\nconst BADGE_WIDTH = '16px'\nconst BADGE_HEIGHT = '12px'\n\nconst getHostname = href => {\n  if (isNil(href)) return ''\n  const { hostname } = new URL(href)\n  return hostname.replace(REGEX_STRIP_WWW, '')\n}\n\nconst mobileDescriptionStyle = css`\n  ${media.mobile`\n    > p {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  `};\n`\n\nexport const Content = styled('div').attrs({ className: classNames.content })`\n  display: flex;\n  padding: 10px 15px;\n  min-width: 0;\n  box-sizing: border-box;\n  ${({ cardSize }) => css`\n    flex: ${!isLarge(cardSize) ? 1 : '0 0 125px'};\n    justify-content: ${!isSmall(cardSize) ? 'space-around' : 'space-between'};\n    flex-direction: ${!isSmall(cardSize) ? 'column' : 'row'};\n    align-items: ${!isSmall(cardSize) ? 'stretch' : 'center'};\n  `};\n`\n\nconst Header = styled('header').attrs({ className: classNames.title })`\n  text-align: left;\n  font-weight: bold;\n  margin: 0;\n  width: 100%;\n  ${({ cardSize }) => css`\n    flex-grow: ${!isSmall(cardSize) ? 1.2 : 0.8};\n    font-size: ${!isSmall(cardSize) ? '16px' : '15px'};\n\n    ${isSmall(cardSize) &&\n      css`\n        min-width: 0;\n        padding-right: 14px;\n      `}\n  `}\n`\n\nconst Description = styled('div').attrs({ className: classNames.description })`\n  text-align: left;\n  font-size: 14px;\n  flex-grow: 2;\n  margin: auto 0;\n  line-height: 18px;\n  font-weight: normal;\n  ${({ cardSize }) => !isLarge(cardSize) && mobileDescriptionStyle};\n`\n\nconst Footer = styled('footer').attrs({ className: classNames.url })`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-align: left;\n  margin: 0;\n  flex-grow: 0;\n  font-weight: normal;\n  ${({ cardSize }) => css`\n    font-size: ${!isSmall(cardSize) ? '12px' : '10px'};\n    ${!isSmall(cardSize) && 'width: 100%;'}\n  `};\n`\n\nconst Author = styled(CardText)`\n  opacity: 0.75;\n  transition: ${transition.medium('opacity')};\n  will-change: opacity;\n\n  .${classNames.main}:hover & {\n    opacity: 1;\n  }\n`\n\nconst PoweredBy = styled('span').attrs({ title: 'microlink.io' })`\n  background: url('https://cdn.microlink.io/logo/logo.svg') no-repeat center\n    center;\n  display: block;\n  margin-left: 15px;\n  transition: ${transition.medium('filter', 'opacity')};\n  will-change: filter, opacity;\n  &:not(:hover) {\n    filter: grayscale(100%);\n    opacity: 0.75;\n  }\n\n  min-width: ${BADGE_WIDTH};\n  width: ${BADGE_WIDTH};\n  background-size: ${BADGE_WIDTH};\n  height: ${BADGE_HEIGHT};\n`\n\nconst CardContent = () => {\n  const {\n    state: { description, title, url },\n    props: { size }\n  } = useContext(GlobalContext)\n  const isSmallCard = isSmall(size)\n  const formattedUrl = useMemo(() => getHostname(url), [url])\n  const handleOnClick = useCallback(e => {\n    e.preventDefault()\n    window.open('https://www.microlink.io', '_blank')\n  })\n\n  return (\n    <Content cardSize={size}>\n      <Header cardSize={size}>\n        <CardText useNanoClamp={false}>{title}</CardText>\n      </Header>\n      {!isSmallCard && (\n        <Description cardSize={size}>\n          <CardText lines={2}>{description}</CardText>\n        </Description>\n      )}\n      <Footer cardSize={size}>\n        <Author useNanoClamp={false}>{formattedUrl}</Author>\n        <PoweredBy onClick={handleOnClick} />\n      </Footer>\n    </Content>\n  )\n}\n\nexport default CardContent\n","import { css, keyframes } from 'styled-components'\n\nconst emptyStatePulse = keyframes`\n  0% {\n    background: #e1e8ed;\n  }\n  70% {\n    background: #cdd4d8;\n  }\n  100% {\n    background: #e1e8ed;\n  }\n`\nconst emptyStateImagePulse = keyframes`\n  0% {\n    background: #e1e8ed;\n  }\n  70% {\n    background: #dce3e8;\n  }\n  100% {\n    background: #e1e8ed;\n  }\n`\n\nexport const emptyStateAnimation = css`\n  animation: ${emptyStatePulse} .75s linear infinite;\n`\n\nexport const emptyStateImageAnimation = css`\n  animation: ${emptyStateImagePulse} 1.25s linear infinite;\n`\n","import styled, { css } from 'styled-components'\nimport { transition } from '../../../theme'\n\nexport const ImageLoadCatcher = styled('img')`\n  height: 1px;\n  width: 1px;\n  position: absolute;\n  z-index: -1;\n`\n\nexport const loadingOverlay = css`\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background: #e1e8ed;\n    z-index: 1;\n    transition: ${transition.medium('opacity', 'visibility')};\n    will-change: opacity;\n\n    ${({ isLoading }) => css`\n      opacity: ${(isLoading ? 1 : 0)};\n      visibility: ${(isLoading ? 'visible' : 'hidden')};\n    `};\n  }\n`\n","import React, { useContext } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { GlobalContext } from '../../../context/GlobalState'\nimport { media } from '../../../utils'\nimport { loadingOverlay } from './loader'\n\nconst mediaSizeStyles = {\n  small: css`\n    flex: 0 0 48px;\n  `,\n  normal: css`\n    flex: 0 0 125px;\n\n    ${media.mobile`\n      flex: 0 0 92px;\n    `}\n  `,\n  large: css`\n    flex: 1;\n\n    &::before {\n      padding-bottom: 0;\n    }\n  `\n}\n\nconst StyledWrap = styled('div')`\n  background: transparent no-repeat center center / cover;\n  display: block;\n  overflow: hidden;\n  height: auto;\n  position: relative;\n\n  &::before {\n    content: '';\n    padding-bottom: 100%;\n    display: block;\n  }\n\n  ${({ cardSize }) => mediaSizeStyles[cardSize]};\n\n  ${loadingOverlay};\n`\n\nconst Wrap = props => {\n  const {\n    props: { size }\n  } = useContext(GlobalContext)\n\n  return <StyledWrap cardSize={size} {...props} />\n}\n\nexport default Wrap\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport Wrap from './Wrap'\nimport { GlobalContext } from '../../../context/GlobalState'\nimport { classNames, imageProxy } from '../../../utils'\n\nconst ImageWrap = styled(Wrap).attrs({\n  className: `${classNames.media} ${classNames.image}`\n})`\n  background-image: ${({ url }) => (url ? `url('${imageProxy(url)}')` : '')};\n`\n\nconst ImageComponent = props => {\n  const {\n    state: { imageUrl }\n  } = useContext(GlobalContext)\n\n  return <ImageWrap url={imageUrl} {...props} />\n}\n\nexport default ImageComponent\n","/* eslint-disable multiline-ternary */\n\nimport React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { emptyStateAnimation, emptyStateImageAnimation } from './CardAnimation'\nimport CardImage from './CardMedia/Image'\nimport { Content } from './CardContent'\nimport { GlobalContext } from '../../context/GlobalState'\nimport { isLarge, isSmall } from '../../utils'\n\nconst MediaEmpty = styled(CardImage)`\n  ${emptyStateImageAnimation};\n`\n\nconst HeaderEmpty = styled('span')`\n  opacity: 0.8;\n  height: 16px;\n  width: ${({ cardSize }) => (!isSmall(cardSize) ? '60%' : '75%')};\n  display: block;\n  background: #e1e8ed;\n  margin: ${({ cardSize }) =>\n    !isSmall(cardSize) ? '2px 0 8px' : '0 20px 0 0'};\n  ${emptyStateAnimation};\n\n  ${({ cardSize }) =>\n    !isLarge(cardSize) &&\n    `\n    height: 15px;\n  `};\n`\n\nconst DescriptionEmpty = styled('span')`\n  opacity: 0.8;\n  height: 14px;\n  width: 95%;\n  display: block;\n  position: relative;\n  ${emptyStateAnimation};\n  animation-delay: 0.125s;\n`\n\nconst FooterEmpty = styled('span')`\n  opacity: 0.8;\n  height: 12px;\n  width: 30%;\n  display: block;\n  ${emptyStateAnimation} animation-delay: .25s;\n\n  ${({ cardSize }) =>\n    !isLarge(cardSize) &&\n    `\n    height: 10px;\n  `};\n`\n\nconst CardEmptyState = () => {\n  const {\n    props: { size }\n  } = useContext(GlobalContext)\n  const isSmallCard = isSmall(size)\n\n  return (\n    <>\n      <MediaEmpty cardSize={size} />\n      <Content cardSize={size}>\n        <HeaderEmpty cardSize={size} />\n        {!isSmallCard ? (\n          <>\n            <DescriptionEmpty cardSize={size} />\n            <DescriptionEmpty\n              cardSize={size}\n              style={{ marginBottom: '12px' }}\n            />\n          </>\n        ) : null}\n        <FooterEmpty />\n      </Content>\n    </>\n  )\n}\n\nexport default CardEmptyState\n","import styled from 'styled-components'\nimport { transition } from '../../../../theme'\n\nconst MediaButton = styled('div')`\n  backface-visibility: hidden;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n  transition: ${transition.short('transform')};\n  will-change: transform;\n\n  > svg {\n    display: block;\n  }\n\n  &:active:not(:focus) {\n    transform: scale(0.9);\n  }\n`\n\nexport default MediaButton\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport MediaButton from './MediaButton'\nimport { classNames, media, isLarge } from '../../../../utils'\nimport { font, transition } from '../../../../theme'\n\nconst VolumeMute = props => (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14 14' {...props}>\n    <path\n      fill='#FFF'\n      fillRule='evenodd'\n      stroke='none'\n      strokeWidth='1'\n      d='M15.5 6.205l-.705-.705L13 7.295 11.205 5.5l-.705.705L12.295 8 10.5 9.795l.705.705L13 8.705l1.795 1.795.705-.705L13.705 8 15.5 6.205zM9 15a.5.5 0 01-.355-.15L4.835 11H1.5a.5.5 0 01-.5-.5v-5a.5.5 0 01.5-.5h3.335l3.81-3.85a.5.5 0 01.705 0 .5.5 0 01.15.35v13a.5.5 0 01-.5.5z'\n      transform='translate(-1 -1)'\n    />\n  </svg>\n)\n\nconst VolumeUp = props => (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 14 14' {...props}>\n    <path\n      fill='#FFF'\n      fillRule='evenodd'\n      stroke='none'\n      strokeWidth='1'\n      d='M13.58 4.04l-.765.645a5 5 0 01-.145 6.615l.735.7a6 6 0 00.175-7.94v-.02zM10.79 6a3 3 0 01-.09 3.97l.735.68a4 4 0 00.115-5.295L10.79 6zM9 15a.5.5 0 01-.355-.15L4.835 11H1.5a.5.5 0 01-.5-.5v-5a.5.5 0 01.5-.5h3.335l3.81-3.85a.5.5 0 01.705 0 .5.5 0 01.15.35v13a.5.5 0 01-.5.5z'\n      transform='translate(-1 -1)'\n    />\n  </svg>\n)\n\nconst BottomControls = styled('div')`\n  z-index: 2;\n  position: absolute;\n  bottom: ${({ cardSize }) => (isLarge(cardSize) ? 18 : 14)}px;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: ${transition.medium('opacity')};\n  will-change: opacity;\n`\n\nconst VolumeIcon = styled('svg')`\n  stroke: #fff;\n`\n\nconst VolumeButton = styled(MediaButton).attrs({\n  className: classNames.volumeControl\n})`\n  ${VolumeIcon} {\n    width: ${({ cardSize }) => (isLarge(cardSize) ? 16 : 14)}px;\n    height: ${({ cardSize }) => (isLarge(cardSize) ? 16 : 14)}px;\n\n    ${({ cardSize }) =>\n    !isLarge(cardSize) &&\n      media.mobile`\n      width: 12px;\n      height: 12px;\n    `}\n  }\n`\n\nconst PlaybackRateButton = styled(MediaButton).attrs({\n  className: classNames.rateControl\n})`\n  font-size: ${({ cardSize }) => (isLarge(cardSize) ? 12 : 10)}px;\n  min-width: ${({ cardSize }) => (isLarge(cardSize) ? 33 : 28)}px;\n  line-height: 1;\n  font-weight: bold;\n  border: 1.5px solid #fff;\n  border-radius: 9999px;\n  padding: 1px 5px;\n  text-align: center;\n  color: #fff;\n  margin-left: 10px;\n\n  ${({ cardSize }) =>\n    !isLarge(cardSize) &&\n    media.mobile`\n    font-size: 8px;\n    margin-left: 8px;\n    min-width: 23px;\n  `}\n`\n\nconst TimeLabel = styled('span').attrs({ className: classNames.progressTime })`\n  margin: ${({ right }) => (!right ? '0 auto 0 0' : '0 0 0 auto')};\n  font-family: ${font.mono};\n  font-size: 12px;\n  padding: 0 16px;\n  color: #fff;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n`\n\nconst FooterControls = ({\n  cardSize,\n  currentTime,\n  endTime,\n  isMuted,\n  onMuteClick,\n  onPlaybackRateClick,\n  playbackRate\n}) => {\n  const VolumeComponent = useMemo(() => (isMuted ? VolumeMute : VolumeUp), [\n    isMuted\n  ])\n  const isLargeCard = useMemo(() => isLarge(cardSize), [cardSize])\n\n  return (\n    <BottomControls cardSize={cardSize}>\n      {isLargeCard && <TimeLabel>{currentTime}</TimeLabel>}\n\n      <VolumeButton\n        title={isMuted ? 'Unmute' : 'Mute'}\n        cardSize={cardSize}\n        onClick={onMuteClick}\n      >\n        <VolumeIcon as={VolumeComponent} />\n      </VolumeButton>\n\n      <PlaybackRateButton\n        title='Playback Rate'\n        cardSize={cardSize}\n        onClick={onPlaybackRateClick}\n      >\n        <span>{playbackRate}x</span>\n      </PlaybackRateButton>\n\n      {isLargeCard && <TimeLabel right>{endTime}</TimeLabel>}\n    </BottomControls>\n  )\n}\n\nexport default FooterControls\n","import React, { useMemo } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport MediaButton from './MediaButton'\nimport { classNames, isSmall, isLarge, media } from '../../../../utils'\n\nconst Pause = props => (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 20' {...props}>\n    <path\n      fill='#FFF'\n      fillRule='evenodd'\n      stroke='none'\n      strokeWidth='1'\n      d='M12 6h-2a2 2 0 00-2 2v16a2 2 0 002 2h2a2 2 0 002-2V8a2 2 0 00-2-2zm10 0h-2a2 2 0 00-2 2v16a2 2 0 002 2h2a2 2 0 002-2V8a2 2 0 00-2-2z'\n      transform='translate(-8 -6)'\n    />\n  </svg>\n)\n\nconst Play = props => (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 21 24' {...props}>\n    <path\n      fill='#FFF'\n      fillRule='evenodd'\n      stroke='none'\n      strokeWidth='1'\n      d='M7 28a1 1 0 01-1-1V5a1 1 0 011.501-.865l19 11a1 1 0 010 1.73l-19 11A.998.998 0 017 28z'\n      transform='translate(-6 -4)'\n    />\n  </svg>\n)\n\nconst iconSizes = {\n  large: '50px',\n  normal: '35px',\n  small: '20px'\n}\n\nconst PlaybackIcon = styled('svg')`\n  stroke: #fff;\n`\n\nconst PlaybackButtonWrap = styled(MediaButton).attrs({\n  className: classNames.playbackControl\n})`\n  ${PlaybackIcon} {\n    ${({ cardSize }) => css`\n      width: ${iconSizes[cardSize]};\n      height: ${iconSizes[cardSize]};\n      padding: ${isLarge(cardSize) ? 0 : '8px'};\n\n      ${!isLarge(cardSize) &&\n        !isSmall(cardSize) &&\n        media.mobile`\n        width: calc(${iconSizes.small} * 1.2);\n        height: calc(${iconSizes.small} * 1.2);\n      `}\n    `}\n  }\n`\n\nconst PlaybackButton = ({ isPlaying, ...props }) => {\n  const PlaybackComponent = useMemo(() => (isPlaying ? Pause : Play), [\n    isPlaying\n  ])\n\n  return (\n    <PlaybackButtonWrap title={isPlaying ? 'Pause' : 'Play'} {...props}>\n      <PlaybackIcon as={PlaybackComponent} />\n    </PlaybackButtonWrap>\n  )\n}\n\nexport default PlaybackButton\n","import styled, { css } from 'styled-components'\n\nimport { transition } from '../../../../../theme'\n\nconst SCRUBBER_SIZE = 12\n\nconst scrubberSizeScales = { normal: 0.8, small: 0.9 }\n\nconst getScrubberSize = size =>\n  Math.floor(SCRUBBER_SIZE * (scrubberSizeScales[size] || 1))\n\nconst Scrubber = styled('div').attrs(({ isVisible, positionX }) => ({\n  style: {\n    left: positionX,\n    transform: `scale(${isVisible ? 1 : 0.5}) translate(-50%, -50%)`,\n    opacity: isVisible ? 1 : 0,\n    visibility: isVisible ? 'visible' : 'hidden'\n  }\n}))`\n  position: absolute;\n  top: 50%;\n  background: #ffffff;\n  border-radius: 50%;\n  transform-origin: center center;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  transition: ${transition.short('transform', 'opacity', 'visibility')};\n  will-change: left, transform, opacity, visibility;\n  backface-visibility: hidden;\n  z-index: 3;\n\n  ${({ cardSize }) => {\n    const scrubberSize = getScrubberSize(cardSize)\n\n    return css`\n      height: ${scrubberSize}px;\n      width: ${scrubberSize}px;\n    `\n  }}\n`\n\nexport default Scrubber\n","import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\n\nimport { font, transition } from '../../../../../theme'\n\nconst BASE_FONT_SIZE = 11\n\nconst sizeScales = { normal: 0.8 }\nconst getMarkerFontSize = size => BASE_FONT_SIZE * (sizeScales[size] || 1)\n\nconst Tooltip = styled('span').attrs(({ position, isDragging, visible }) => ({\n  style: {\n    left: `${position}px`,\n    top: visible ? '-4px' : '0px',\n    visibility: visible ? 'visible' : 'hidden',\n    opacity: visible ? 1 : 0,\n    transform: `translate(-50%, ${!isDragging ? -100 : -110}%)`\n  }\n}))`\n  position: absolute;\n  background: rgba(24, 25, 25, 0.75);\n  color: #fff;\n  text-shadow: 0 1px 2px rgba(24, 25, 25, 0.15);\n  padding: 2px 3px;\n  border-radius: 4px;\n  font-family: ${font.mono};\n  font-size: ${({ cardSize }) => getMarkerFontSize(cardSize)}px;\n  line-height: 1;\n  transition: ${transition.medium('opacity', 'visibility', 'transform')}, ${transition.long('top')};\n  will-change: top, left, visibility, opacity, transform;\n  backface-visibility: hidden;\n`\n\nexport default forwardRef(\n  (\n    {\n      isDragging,\n      isVisible,\n      label,\n      positionX,\n      size,\n      ...props\n    },\n    ref\n  ) => (\n    <>\n      <Tooltip\n        visible={isVisible}\n        position={positionX}\n        cardSize={size}\n        ref={ref}\n        isDragging={isDragging}\n        {...props}\n      >\n        {label}\n      </Tooltip>\n    </>\n  )\n)\n","import React, { useCallback, useContext, useMemo, useRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { transition } from '../../../../../theme'\nimport {\n  clampNumber,\n  classNames,\n  formatSeconds,\n  isSmall\n} from '../../../../../utils'\nimport { GlobalContext } from '../../../../../context/GlobalState'\n\nimport Scrubber from './Scrubber'\nimport Tooltip from './Tooltip'\n\nconst HEIGHT = 6\nconst PADDING = 6\n\nconst heightScales = { normal: 0.7, small: 0.6 }\nconst activeHeightScales = { small: 0.9, large: 1.4 }\n\nconst getProgressBarHeight = size =>\n  Math.floor(HEIGHT * (heightScales[size] || 1))\n\nconst getProgressBarActiveHeight = size =>\n  Math.floor(HEIGHT * (activeHeightScales[size] || 1))\n\nconst OuterWrap = styled('div').attrs(() => ({\n  className: classNames.progressBar\n}))`\n  position: relative;\n  padding: ${PADDING}px ${PADDING / 2}px ${PADDING / 2}px;\n  z-index: 2;\n  backface-visibility: hidden;\n`\n\nconst BarsWrap = styled('div').attrs(({ cardSize, isDragging }) => {\n  if (isDragging) {\n    const activeHeight = getProgressBarActiveHeight(cardSize)\n\n    return {\n      style: {\n        height: `${activeHeight}px`\n      }\n    }\n  }\n\n  return {}\n})`\n  background: transparent;\n  border-radius: 9999px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  background: rgba(255, 255, 255, 0.15);\n  transition: ${transition.short('height')};\n  will-change: height;\n  pointer-events: none;\n  position: relative;\n\n  ${({ cardSize }) => {\n    const height = getProgressBarHeight(cardSize)\n    const activeHeight = getProgressBarActiveHeight(cardSize)\n\n    return css`\n      height: ${height}px;\n\n      ${OuterWrap}:hover & {\n        height: ${activeHeight}px;\n      }\n    `\n  }}\n`\n\nconst ProgressLine = styled('div')`\n  border-radius: inherit;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nconst ProgressMask = styled('div').attrs(({ maskScale }) => ({\n  style: {\n    transform: `scaleX(${maskScale})`\n  }\n}))`\n  position: absolute;\n  left: 0;\n  top: -50%;\n  height: 200%;\n  width: 100%;\n  background: #ffffff;\n  transform-origin: left center;\n  will-change: transform;\n`\n\nconst ProgressHover = styled('div').attrs(\n  ({ cursorRatio, isHovering, progressPercent }) => ({\n    style: {\n      left: progressPercent,\n      transform: `scaleX(${cursorRatio})`,\n      opacity: isHovering ? 1 : 0,\n      visibility: isHovering ? 'visible' : 'hidden'\n    }\n  })\n)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.4);\n  transform-origin: left center;\n  transition: ${transition.short('opacity', 'visibility')};\n  will-change: left, transform, opacity, visible;\n`\n\nconst BufferedChunk = styled('div').attrs(({ start, end }) => ({\n  style: {\n    left: `${start}px`,\n    right: `${end}px`\n  }\n}))`\n  background: rgba(255, 255, 255, 0.35);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n`\n\nconst ProgressBar = ({\n  bufferedMedia,\n  cursorX,\n  duration,\n  hoveredTime,\n  isDragging,\n  isHovering,\n  onClick,\n  onMouseDown,\n  onMouseOver,\n  progress,\n  showTooltip\n}) => {\n  const {\n    props: { size }\n  } = useContext(GlobalContext)\n  const wrapRef = useRef()\n  const tooltipRef = useRef()\n\n  const isSmallCard = useMemo(() => isSmall(size), [size])\n\n  const getWrapWidth = useCallback(() => {\n    if (wrapRef.current) {\n      return wrapRef.current.getBoundingClientRect().width - PADDING\n    }\n\n    return 0\n  }, [])\n\n  const progressRatio = useMemo(() => clampNumber(progress / duration, 0, 1), [\n    duration,\n    progress\n  ])\n\n  const progressPercent = useMemo(\n    () => `${clampNumber(progressRatio * 100, 1, 99)}%`,\n    [progressRatio]\n  )\n\n  const cursorRatio = useMemo(() => {\n    if (wrapRef.current) {\n      const wrapWidth = getWrapWidth()\n      const startPoint = progressRatio * wrapWidth\n      const cursorPosition = cursorX - startPoint\n      const width = wrapWidth - startPoint\n\n      if (cursorPosition > 0) {\n        return clampNumber((cursorPosition / width).toFixed(3), 0, 0.99)\n      }\n    }\n\n    return 0\n  }, [cursorX, getWrapWidth, progressRatio])\n\n  const bufferedMediaChunks = useMemo(() => {\n    const wrapWidth = getWrapWidth()\n\n    return bufferedMedia.map((chunk, key) => {\n      const start = chunk.start * wrapWidth\n      const end = wrapWidth - chunk.end * wrapWidth\n\n      return { key, start, end }\n    })\n  }, [bufferedMedia, getWrapWidth])\n\n  const tooltipLabel = useMemo(() => formatSeconds(hoveredTime), [hoveredTime])\n\n  const tooltipPositionX = useMemo(() => {\n    if (wrapRef.current && tooltipRef.current) {\n      const wrapWidth = getWrapWidth()\n      const tooltipWidth = tooltipRef.current.getBoundingClientRect().width\n      const tooltipHalf = tooltipWidth / 2\n\n      return clampNumber(cursorX, tooltipHalf, wrapWidth - tooltipHalf)\n    }\n\n    return 0\n  }, [cursorX, getWrapWidth])\n\n  const mouseEvents = useMemo(\n    () => ({\n      onClick,\n      onMouseDown,\n      onMouseOver\n    }),\n    [onClick, onMouseDown, onMouseOver]\n  )\n\n  const showAccessories = useMemo(() => isDragging || isHovering, [\n    isDragging,\n    isHovering\n  ])\n\n  return (\n    <OuterWrap cardSize={size} ref={wrapRef} {...mouseEvents}>\n      <BarsWrap cardSize={size} isDragging={isDragging}>\n        <ProgressLine>\n          <ProgressHover\n            cursorRatio={cursorRatio}\n            isHovering={isHovering}\n            progressPercent={progressPercent}\n          />\n\n          {bufferedMediaChunks.map(({ key, ...chunk }) => (\n            <BufferedChunk key={key} {...chunk} />\n          ))}\n\n          <ProgressMask maskScale={progressRatio} />\n        </ProgressLine>\n\n        <Scrubber\n          cardSize={size}\n          isVisible={showAccessories}\n          positionX={progressPercent}\n        />\n\n        {!isSmallCard && (\n          <Tooltip\n            isDragging={isDragging}\n            isVisible={showAccessories}\n            label={tooltipLabel}\n            positionX={tooltipPositionX}\n            ref={tooltipRef}\n            size={size}\n          />\n        )}\n      </BarsWrap>\n    </OuterWrap>\n  )\n}\n\nexport default ProgressBar\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport MediaButton from './MediaButton'\nimport { media, isLarge } from '../../../../utils'\n\nconst Backward = ({ cardSize, ...props }) => (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 29' {...props}>\n    <path\n      fill='#FFF'\n      fillRule='evenodd'\n      stroke='none'\n      strokeWidth='1'\n      d='M4 18c0 6.627 5.373 12 12 12s12-5.373 12-12S22.627 6 16 6h-4V1L6 7l6 6V8h4c5.523 0 10 4.477 10 10s-4.477 10-10 10S6 23.523 6 18H4zm15.63 4.13a2.84 2.84 0 01-1.28-.27 2.44 2.44 0 01-.89-.77 3.57 3.57 0 01-.52-1.25 7.69 7.69 0 01-.17-1.68 7.83 7.83 0 01.17-1.68c.094-.445.27-.87.52-1.25.23-.325.535-.59.89-.77.4-.188.838-.28 1.28-.27a2.44 2.44 0 012.16 1 5.23 5.23 0 01.7 2.93 5.23 5.23 0 01-.7 2.93 2.44 2.44 0 01-2.16 1.08zm0-1.22c.411.025.8-.19 1-.55a3.38 3.38 0 00.37-1.51v-1.38a3.31 3.31 0 00-.29-1.5 1.23 1.23 0 00-2.06 0 3.31 3.31 0 00-.29 1.5v1.38a3.38 3.38 0 00.29 1.51c.195.356.575.57.98.55zm-9 1.09v-1.18h2v-5.19l-1.86 1-.55-1.06 2.32-1.3H14v6.5h1.78V22h-5.15z'\n      transform='translate(-4 -1)'\n    />\n  </svg>\n)\n\nconst Forward = ({ cardSize, ...props }) => (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 29' {...props}>\n    <path\n      fill='#FFF'\n      fillRule='evenodd'\n      stroke='none'\n      strokeWidth='1'\n      d='M26 18c0 5.523-4.477 10-10 10S6 23.523 6 18 10.477 8 16 8h4v5l6-6-6-6v5h-4C9.373 6 4 11.373 4 18s5.373 12 12 12 12-5.373 12-12h-2zm-6.36 4.13a2.81 2.81 0 01-1.28-.27 2.36 2.36 0 01-.89-.77 3.39 3.39 0 01-.47-1.25 7.12 7.12 0 01-.17-1.68 7.24 7.24 0 01.17-1.68 3.46 3.46 0 01.52-1.25 2.36 2.36 0 01.89-.77c.4-.19.838-.282 1.28-.27a2.44 2.44 0 012.16 1 5.31 5.31 0 01.7 2.93 5.31 5.31 0 01-.7 2.93 2.44 2.44 0 01-2.21 1.08zm0-1.22a1 1 0 001-.55c.22-.472.323-.99.3-1.51v-1.38a3.17 3.17 0 00-.3-1.5 1.22 1.22 0 00-2.05 0 3.18 3.18 0 00-.29 1.5v1.38a3.25 3.25 0 00.29 1.51 1 1 0 001.05.55zm-7.02-3.49c.355.035.71-.06 1-.27a.84.84 0 00.31-.68v-.08a.94.94 0 00-.3-.74 1.2 1.2 0 00-.83-.27 1.65 1.65 0 00-.89.24 2.1 2.1 0 00-.68.68l-.93-.83a5.37 5.37 0 01.44-.51 2.7 2.7 0 01.54-.4 2.55 2.55 0 01.7-.27 3.25 3.25 0 01.87-.1 3.94 3.94 0 011.06.14c.297.078.576.214.82.4.224.168.408.383.54.63.123.26.184.543.18.83a2 2 0 01-.11.67 1.82 1.82 0 01-.32.52 1.79 1.79 0 01-.47.36 2.27 2.27 0 01-.57.2V18c.219.04.431.11.63.21a1.7 1.7 0 01.85.93c.084.234.124.481.12.73a2 2 0 01-.2.92 2 2 0 01-.58.72 2.66 2.66 0 01-.89.45 3.76 3.76 0 01-1.15.16 4.1 4.1 0 01-1-.11 3.1 3.1 0 01-.76-.31 2.76 2.76 0 01-.56-.45 4.22 4.22 0 01-.44-.55l1.07-.81c.082.147.175.288.28.42.105.128.226.243.36.34.137.097.29.171.45.22a2 2 0 00.57.07 1.45 1.45 0 001-.3 1.12 1.12 0 00.34-.85v-.08a1 1 0 00-.37-.8 1.78 1.78 0 00-1.06-.28h-.76v-1.21h.74z'\n      transform='translate(-4 -1)'\n    />\n  </svg>\n)\n\nconst SeekIcon = styled('svg')`\n  stroke: #fff;\n  width: ${({ cardSize }) => (isLarge(cardSize) ? 30 : 24)}px;\n  height: ${({ cardSize }) => (isLarge(cardSize) ? 30 : 24)}px;\n\n  ${({ cardSize }) =>\n    !isLarge(cardSize) &&\n    media.mobile`\n    width: 0;\n    height: 0;\n  `}\n`\n\nconst SeekButtonWrap = styled(MediaButton)`\n  margin: 0 ${({ cardSize }) => (isLarge(cardSize) ? '28px' : '3px')};\n`\n\nconst SeekButton = ({ type = 'rewind', cardSize, ...props }) => {\n  const IconComponent = useMemo(\n    () => (type === 'rewind' ? Backward : Forward),\n    [type]\n  )\n\n  return (\n    <SeekButtonWrap\n      title={type === 'rewind' ? 'Rewind' : 'Forward'}\n      cardSize={cardSize}\n      {...props}\n    >\n      <SeekIcon as={IconComponent} cardSize={cardSize} />\n    </SeekButtonWrap>\n  )\n}\n\nexport default SeekButton\n","import React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\n\nimport { transition } from '../../../../theme'\nimport { classNames } from '../../../../utils'\n\nimport MediaButton from './MediaButton'\n\nconst BASE_SIZE = 12\nconst BASE_OFFSET = 6\n\nconst offsetScales = { normal: 0.8, small: 0.6 }\nconst sizeScales = { normal: 0.9, small: 0.8 }\n\nconst getSpinnerOffset = size =>\n  Math.floor(BASE_OFFSET * (offsetScales[size] || 1))\n\nconst getSpinnerSize = size => Math.floor(BASE_SIZE * (sizeScales[size] || 1))\n\nconst rotate = keyframes`\n  100% {\n    transform: rotate(360deg);\n  }\n`\n\nconst dash = keyframes`\n  0% {\n    stroke-dasharray: 1, 150;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -35;\n  }\n  100% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -124;\n  }\n`\n\nconst Wrap = styled(MediaButton).attrs(({ isVisible }) => ({\n  style: {\n    opacity: isVisible ? 1 : 0,\n    visibility: isVisible ? 'visible' : 'hidden'\n  }\n}))(({ cardSize }) => {\n  const size = `${getSpinnerSize(cardSize)}px`\n  const offset = `${getSpinnerOffset(cardSize)}px`\n\n  return css`\n    position: absolute;\n    width: ${size};\n    right: ${offset};\n    top: ${offset};\n    transition: ${transition.medium('opacity', 'visibility')};\n    will-change: opacity, visibility;\n    pointer-events: none;\n  `\n})\n\nconst Svg = styled('svg')`\n  width: 100%;\n  animation: ${rotate} 2s linear infinite;\n  will-change: transform;\n`\n\nconst Circle = styled('circle')`\n  stroke: #fff;\n  stroke-linecap: round;\n  stroke-width: 7;\n  fill: none;\n  animation: ${dash} 1.5s ease-in-out infinite;\n  will-change: stroke-dasharray, stroke-dashoffset;\n`\n\nconst Spinner = ({ size, isVisible }) => (\n  <Wrap cardSize={size} className={classNames.spinner} isVisible={isVisible}>\n    <Svg viewBox='0 0 50 50'>\n      <Circle cx='25' cy='25' r='20' />\n    </Svg>\n  </Wrap>\n)\n\nexport default Spinner\n","/* eslint-disable multiline-ternary */\n\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react'\n\nimport styled, { css } from 'styled-components'\n\nimport FooterControls from './FooterControls'\nimport PlaybackButton from './PlaybackButton'\nimport ProgressBar from './ProgressBar'\nimport SeekButton from './SeekButton'\nimport Spinner from './Spinner'\nimport { transition } from '../../../../theme'\n\nimport {\n  classNames,\n  formatSeconds,\n  isSmall,\n  isFunction,\n  clampNumber\n} from '../../../../utils'\n\nimport { GlobalContext } from '../../../../context/GlobalState'\n\nconst SPACE_KEY = 32\nconst L_ARROW_KEY = 37\nconst R_ARROW_KEY = 39\nconst M_KEY = 77\n\nconst OuterWrap = styled('div').attrs({ className: classNames.mediaControls })`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  transition: ${transition.long('background')}, ${transition.medium('opacity')};\n  will-change: background;\n  display: flex;\n  flex-direction: column;\n  pointer-events: auto;\n\n  ${({ hasInteracted, isDragging, isPlaying }) => {\n    const bg = 'rgba(0, 0, 0, 0.35)'\n    const dragBg = 'rgba(0, 0, 0, 0.2)'\n    const isPaused = hasInteracted && !isPlaying\n\n    return css`\n      .${classNames.main}:hover & {\n        background: ${!isDragging ? bg : dragBg};\n      }\n\n      .${classNames.main}:not(:hover) & {\n        opacity: ${!hasInteracted || isPaused ? 1 : 0};\n        ${isPaused && `background: ${bg}`};\n      }\n    `\n  }}\n`\n\nconst InnerWrap = styled('div')`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n`\n\nconst ControlsTop = styled('div')`\n  flex: 1;\n\n  ${({ isVisible }) =>\n    !isVisible &&\n    css`\n    *[class*=\"${classNames.mediaControls}\"]:not(.${classNames.progressTime}) {\n      transition: ${transition.medium('opacity', 'visibility')};\n      opacity: 0;\n      visibility: hidden;\n    }\n  `}\n`\n\nconst getNextPlaybackRate = rate => {\n  switch (rate) {\n    case 1:\n      return 1.25\n    case 1.25:\n      return 1.5\n    case 1.5:\n      return 2\n    default:\n      return 1\n  }\n}\n\nconst Controls = ({ MediaComponent, mediaProps }) => {\n  const {\n    props: { autoPlay, controls, mediaRef: propRef, muted, loop, size }\n  } = useContext(GlobalContext)\n  const [duration, setDuration] = useState(0)\n  const [progress, setProgress] = useState(0)\n  const [buffered, setBuffered] = useState([])\n  const [cursorX, setCursorX] = useState(0)\n  const [hoveredTime, setHoveredTime] = useState(0)\n  const [isPlaying, setIsPlaying] = useState(autoPlay)\n  const [isMuted, setIsMuted] = useState(muted)\n  const [isBuffering, setIsBuffering] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [isDragging, setIsDragging] = useState(false)\n  const [playbackRate, setPlaybackRate] = useState(1)\n  const [hasInteracted, setHasInteracted] = useState(autoPlay)\n  const [pausedByDrag, setPausedByDrag] = useState(false)\n\n  const mediaRef = useRef()\n  const setRefs = useCallback(\n    node => {\n      mediaRef.current = node\n\n      if (propRef) {\n        if (isFunction(propRef)) {\n          propRef(node)\n        } else {\n          propRef.current = node\n        }\n      }\n    },\n    [propRef]\n  )\n\n  const isNotSmall = useMemo(() => !isSmall(size), [size])\n\n  const mediaEvents = useMemo(\n    () => ({\n      onCanPlay: () => setIsBuffering(false),\n      onLoadedMetadata: e => setDuration(e.currentTarget.duration),\n      onPause: () => setIsPlaying(false),\n      onPlay: () => setIsPlaying(true),\n      onPlaying: () => setIsBuffering(false),\n      onProgress: e => setBuffered(e.currentTarget.buffered),\n      onRateChange: e => setPlaybackRate(e.currentTarget.playbackRate),\n      onTimeUpdate: e => setProgress(e.currentTarget.currentTime),\n      onVolumeChange: e => setIsMuted(e.currentTarget.muted),\n      onWaiting: e => setIsBuffering(true)\n    }),\n    []\n  )\n\n  const evaluateCursorPosition = useCallback(event => {\n    if (mediaRef.current) {\n      const bounds = event.currentTarget.getBoundingClientRect()\n      const cursor = clampNumber(\n        Math.floor(event.clientX - bounds.left),\n        0,\n        bounds.width\n      )\n      const time = (cursor / bounds.width) * mediaRef.current.duration\n\n      return { cursor, time }\n    }\n\n    return { cursor: 0, time: 0 }\n  }, [])\n\n  const togglePlayback = useCallback(() => {\n    if (mediaRef.current) {\n      if (mediaRef.current.paused) {\n        if (!hasInteracted) {\n          setHasInteracted(true)\n        }\n\n        mediaRef.current.play()\n      } else {\n        mediaRef.current.pause()\n      }\n    }\n  }, [hasInteracted])\n\n  const jumpTo = useCallback(time => {\n    if (mediaRef.current) {\n      const t = clampNumber(time, 0, mediaRef.current.duration)\n\n      mediaRef.current.currentTime = t\n      setProgress(t)\n    }\n  }, [])\n\n  const onSeekClick = useCallback(\n    (event, type) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (mediaRef.current) {\n        const { currentTime } = mediaRef.current\n\n        jumpTo(type === 'rewind' ? currentTime - 10 : currentTime + 30)\n      }\n    },\n    [jumpTo]\n  )\n\n  const onMuteClick = useCallback(event => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (mediaRef.current) {\n      mediaRef.current.muted = !mediaRef.current.muted\n    }\n  }, [])\n\n  const onPlaybackRateClick = useCallback(event => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (mediaRef.current) {\n      mediaRef.current.playbackRate = getNextPlaybackRate(\n        mediaRef.current.playbackRate\n      )\n    }\n  }, [])\n\n  const onProgressBarClick = useCallback(event => {\n    event.preventDefault()\n    event.stopPropagation()\n    setIsDragging(false)\n  }, [])\n\n  const onProgressBarMouseDown = useCallback(\n    event => {\n      event.preventDefault()\n      event.stopPropagation()\n      setIsDragging(true)\n\n      const { time } = evaluateCursorPosition(event)\n      jumpTo(time)\n    },\n    [evaluateCursorPosition, jumpTo]\n  )\n\n  const onProgressBarMouseOver = useCallback(() => setIsHovering(true), [])\n\n  const onWrapClick = useCallback(\n    event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (isDragging) {\n        setIsDragging(false)\n      } else {\n        togglePlayback()\n      }\n    },\n    [isDragging, togglePlayback]\n  )\n\n  const onWrapMouseMove = useCallback(\n    event => {\n      if ((isDragging || isHovering) && mediaRef.current) {\n        event.preventDefault()\n        const { cursor, time } = evaluateCursorPosition(event)\n\n        setHoveredTime(time)\n        setCursorX(cursor)\n\n        if (isDragging) {\n          if (!mediaRef.current.paused) {\n            mediaRef.current.pause()\n            setPausedByDrag(true)\n          }\n\n          jumpTo(time)\n        }\n      }\n    },\n    [evaluateCursorPosition, isDragging, isHovering, jumpTo]\n  )\n\n  const onWrapMouseOver = useCallback(\n    event => {\n      if (isDragging && event.buttons === 0) {\n        setIsDragging(false)\n      }\n    },\n    [isDragging]\n  )\n\n  const onWrapKeyDown = useCallback(\n    event => {\n      if (isDragging) {\n        return\n      }\n\n      const { keyCode } = event\n\n      if (\n        [SPACE_KEY, L_ARROW_KEY, R_ARROW_KEY, M_KEY].includes(keyCode) &&\n        mediaRef.current\n      ) {\n        event.preventDefault()\n\n        switch (keyCode) {\n          case SPACE_KEY:\n            togglePlayback()\n            break\n          case L_ARROW_KEY:\n            jumpTo(mediaRef.current.currentTime - 5)\n            break\n          case R_ARROW_KEY:\n            jumpTo(mediaRef.current.currentTime + 5)\n            break\n          case M_KEY:\n            mediaRef.current.muted = !mediaRef.current.muted\n            break\n        }\n      }\n    },\n    [duration, isDragging, jumpTo, togglePlayback]\n  )\n\n  const outerWrapEvents = useMemo(\n    () => ({\n      onClick: onWrapClick,\n      onKeyDown: onWrapKeyDown,\n      onMouseMove: onWrapMouseMove,\n      onMouseOut: () => setIsHovering(false),\n      onMouseOver: onWrapMouseOver\n    }),\n    [onWrapClick, onWrapKeyDown, onWrapMouseMove, onWrapMouseOver]\n  )\n\n  const outerWrapTitle = useMemo(() => (hasInteracted ? { title: '' } : {}), [\n    hasInteracted\n  ])\n\n  const bufferedMedia = useMemo(() => {\n    if (buffered && buffered.length && mediaRef.current) {\n      return [...Array(buffered.length).keys()].map(index => {\n        return {\n          start: buffered.start(index) / mediaRef.current.duration,\n          end: buffered.end(index) / mediaRef.current.duration\n        }\n      })\n    }\n\n    return []\n  }, [buffered])\n\n  const currentTime = useMemo(() => formatSeconds(progress || 0), [progress])\n  const endTime = useMemo(() => formatSeconds(duration || 0), [duration])\n\n  const footerControlsProps = useMemo(\n    () => ({\n      cardSize: size,\n      currentTime,\n      endTime,\n      isMuted,\n      onMuteClick,\n      onPlaybackRateClick,\n      playbackRate\n    }),\n    [\n      currentTime,\n      endTime,\n      isMuted,\n      onMuteClick,\n      onPlaybackRateClick,\n      playbackRate,\n      size\n    ]\n  )\n\n  const progressBarProps = useMemo(\n    () => ({\n      bufferedMedia,\n      cursorX,\n      duration,\n      hoveredTime,\n      isDragging,\n      isHovering,\n      onClick: onProgressBarClick,\n      onMouseDown: onProgressBarMouseDown,\n      onMouseOver: onProgressBarMouseOver,\n      progress,\n      showTooltip: isDragging || isHovering\n    }),\n    [\n      bufferedMedia,\n      cursorX,\n      duration,\n      hoveredTime,\n      isDragging,\n      isHovering,\n      onProgressBarClick,\n      onProgressBarMouseDown,\n      onProgressBarMouseOver,\n      progress\n    ]\n  )\n\n  useEffect(() => {\n    if (\n      !isDragging &&\n      pausedByDrag &&\n      mediaRef.current &&\n      mediaRef.current.paused\n    ) {\n      mediaRef.current.play()\n      setPausedByDrag(false)\n    }\n  }, [pausedByDrag, isDragging])\n\n  return (\n    <>\n      <MediaComponent\n        {...mediaProps}\n        {...mediaEvents}\n        ref={setRefs}\n        autoPlay={autoPlay}\n        loop={loop}\n        muted={muted}\n      />\n\n      {controls && (\n        <OuterWrap\n          {...outerWrapTitle}\n          tabIndex={0}\n          hasInteracted={hasInteracted}\n          isDragging={isDragging}\n          isPlaying={isPlaying}\n          {...outerWrapEvents}\n        >\n          <Spinner size={size} isVisible={isBuffering} />\n\n          {!hasInteracted ? (\n            <InnerWrap>\n              <PlaybackButton cardSize={size} />\n            </InnerWrap>\n          ) : (\n            <>\n              <ControlsTop isVisible={!isDragging}>\n                <InnerWrap>\n                  {isNotSmall && (\n                    <SeekButton\n                      className={classNames.rwControl}\n                      type='rewind'\n                      cardSize={size}\n                      onClick={event => onSeekClick(event, 'rewind')}\n                    />\n                  )}\n\n                  <PlaybackButton cardSize={size} isPlaying={isPlaying} />\n\n                  {isNotSmall && (\n                    <SeekButton\n                      className={classNames.ffwControl}\n                      type='fastforward'\n                      cardSize={size}\n                      onClick={event => onSeekClick(event, 'fastforward')}\n                    />\n                  )}\n                </InnerWrap>\n\n                {isNotSmall && <FooterControls {...footerControlsProps} />}\n              </ControlsTop>\n\n              <ProgressBar {...progressBarProps} />\n            </>\n          )}\n        </OuterWrap>\n      )}\n    </>\n  )\n}\n\nexport default Controls\n","import React, { useContext, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport Wrap from './Wrap'\nimport Controls from './Controls'\nimport { GlobalContext } from '../../../context/GlobalState'\nimport { classNames, imageProxy } from '../../../utils'\n\nconst VideoDOM = styled('video')`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  &::media-controls-start-playback-button {\n    display: none;\n    appearance: none;\n  }\n`\n\nconst Video = props => {\n  const {\n    state: { imageUrl, playsInline, videoUrl }\n  } = useContext(GlobalContext)\n\n  const mediaProps = useMemo(() => {\n    const mediaProps = {\n      className: `${classNames.media} ${classNames.video}`,\n      src: videoUrl,\n      playsInline\n    }\n    if (imageUrl) mediaProps.poster = imageProxy(imageUrl)\n    return mediaProps\n  }, [imageUrl, playsInline, videoUrl])\n\n  return (\n    <Wrap\n      className={`${classNames.mediaWrapper} ${classNames.videoWrapper}`}\n      {...props}\n    >\n      <Controls MediaComponent={VideoDOM} mediaProps={mediaProps} />\n    </Wrap>\n  )\n}\n\nexport default Video\n","import React, { useContext, useState } from 'react'\n\nimport { GlobalContext } from '../../../context/GlobalState'\nimport { getUrlPath } from '../../../utils'\nimport { ImageLoadCatcher } from './loader'\nimport Image from './Image'\nimport Video from './Video'\nimport Audio from './Audio'\n\nconst isUrl = url => getUrlPath(url) !== null\n\nconst MEDIA_COMPONENT = {\n  video: Video,\n  image: Image,\n  audio: Audio\n}\n\nconst getMediaType = (isAudio, isVideo) => {\n  if (isAudio) return 'audio'\n  if (isVideo) return 'video'\n  return 'image'\n}\n\nconst CardMedia = () => {\n  const {\n    state: { imageUrl, isAudio, isVideo }\n  } = useContext(GlobalContext)\n  const [isLoading, setIsLoading] = useState(isUrl(imageUrl))\n  const mediaType = getMediaType(isAudio, isVideo)\n  const MediaComponent = MEDIA_COMPONENT[mediaType]\n\n  return (\n    <>\n      <MediaComponent isLoading={isLoading} />\n      {isLoading && (\n        <ImageLoadCatcher src={imageUrl} onLoad={() => setIsLoading(false)} />\n      )}\n    </>\n  )\n}\n\nexport default CardMedia\n","import React, { useContext, useMemo } from 'react'\n\nimport Image from './Image'\nimport Controls from './Controls'\nimport { GlobalContext } from '../../../context/GlobalState'\nimport { classNames } from '../../../utils'\n\nconst Audio = props => {\n  const {\n    state: { audioUrl }\n  } = useContext(GlobalContext)\n\n  const mediaProps = useMemo(\n    () => ({\n      className: `${classNames.media} ${classNames.audio}`,\n      src: audioUrl\n    }),\n    [audioUrl]\n  )\n\n  return (\n    <Image\n      className={`${classNames.mediaWrapper} ${classNames.audioWrapper}`}\n      {...props}\n    >\n      <Controls MediaComponent='audio' mediaProps={mediaProps} />\n    </Image>\n  )\n}\n\nexport default Audio\n","import { createElement, forwardRef, useContext } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { GlobalContext } from '../../context/GlobalState'\nimport { font, animation, speed } from '../../theme'\nimport { media, isLarge } from '../../utils'\n\nconst HEIGHT = '382px'\n\nconst contrastStyle = ({ backgroundColor, color }) => css`\n  background-color: ${backgroundColor};\n  border-color: ${color};\n  transition-property: filter;\n  will-change: filter;\n\n  &&& {\n    color: ${color};\n  }\n\n  &:hover {\n    filter: brightness(90%);\n  }\n`\n\nconst largeStyle = css`\n  flex-direction: column;\n  height: ${HEIGHT};\n  ${media.mobile`\n    height: calc(${HEIGHT} * 7/9);\n  `};\n`\n\nconst hoverStyle = css`\n  transition-property: background, border-color;\n  will-change: background, border-color;\n  &:hover {\n    background-color: var(--microlink-hover-background-color, #f5f8fa);\n    border-color: var(--microlink-hover-border-color, #8899A680);\n  }\n`\n\nconst rtlStyle = ({ cardSize }) => css`\n  flex-direction: ${isLarge(cardSize) ? 'column-reverse' : 'row-reverse'};\n`\n\nconst baseStyle = css(\n  () => `\n  max-width: var(--microlink-max-width, 500px);\n  background-color: var(--microlink-background-color, #fff);\n  border-width: var(--microlink-border-width, 1px);\n  border-style: var(--microlink-border-style, solid);\n  border-color: var(--microlink-border-color, #e1e8ed);\n  color: var(--microlink-color, #181919);\n  overflow: hidden;\n  font-family: ${font.sans};\n  display: flex;\n  text-decoration: none;\n  opacity: 1;\n  position: relative;\n  transition-duration: ${speed.medium};\n  transition-timing-function: ${animation.medium};\n\n  &:active,\n  &:hover {\n    outline: 0;\n  }\n`\n)\n\nconst Element = styled('a')(\n  baseStyle,\n  ({ isLoading, contrast }) => !isLoading && !contrast && hoverStyle,\n  ({ cardSize }) => isLarge(cardSize) && largeStyle,\n  ({ direction }) => direction === 'rtl' && rtlStyle,\n  ({ backgroundColor, color, contrast }) =>\n    contrast && color && backgroundColor && contrastStyle,\n  ({ backgroundColor, color, contrast }) =>\n    contrast && (!color || !backgroundColor) && hoverStyle\n)\n\nconst CardWrap = forwardRef(({ href, rel, target, ...restProps }, ref) => {\n  const {\n    state: { backgroundColor, color, title },\n    props: { size: cardSize }\n  } = useContext(GlobalContext)\n\n  return createElement(Element, {\n    ...(restProps.as === 'a' ? { href, rel, target } : undefined),\n    ...restProps,\n    backgroundColor,\n    cardSize,\n    color,\n    ref,\n    title\n  })\n})\n\nCardWrap.defaultProps = {\n  as: 'a',\n  rel: 'noopener noreferrer',\n  target: '_blank'\n}\n\nexport default CardWrap\n","/* global IntersectionObserver */\n\nimport { useCallback, useState } from 'react'\n\nexport const useIntersectionObserver = (enabled, options) => {\n  const [hasIntersected, setHasIntersected] = useState(false)\n\n  const refCallback = useCallback(node => {\n    if (enabled) {\n      const onIntersect = ([entry], self) => {\n        if (entry.isIntersecting) {\n          setHasIntersected(true)\n          self.unobserve(entry.target)\n        }\n      }\n      const observer = new IntersectionObserver(onIntersect, options)\n\n      if (node !== null) {\n        observer.observe(node)\n      }\n    } else {\n      setHasIntersected(true)\n    }\n  })\n\n  return [hasIntersected, refCallback]\n}\n","/* eslint-disable multiline-ternary */\n\nimport React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  useContext\n} from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport { CardWrap, CardMedia, CardContent, CardEmpty } from './components/Card'\nimport GlobalState, { GlobalContext } from './context/GlobalState'\nimport {\n  castArray,\n  classNames,\n  fetchFromApi,\n  getApiUrl,\n  getUrlPath,\n  getPreferredMedia,\n  imageProxy,\n  isFunction,\n  isLazySupported,\n  isObject,\n  isSSR,\n  someProp\n} from './utils'\n\nimport { useIntersectionObserver } from './utils/hooks'\n\nconst Card = props => {\n  const {\n    className,\n    fetchData,\n    lazy,\n    loading,\n    media: mediaProp,\n    setData,\n    url,\n    ...restProps\n  } = props\n\n  const mediaProps = useMemo(() => castArray(mediaProp), [mediaProp])\n  const { updateState } = useContext(GlobalContext)\n  const [loadingState, setLoading] = useState(true)\n  const [iframeMedia, setIframeMedia] = useState(null)\n  const [isError, setIsError] = useState(false)\n  const isLoadingUndefined = useMemo(() => loading === undefined, [loading])\n  const [apiUrl, apiUrlProps] = useMemo(\n    () => getApiUrl({ ...props, media: mediaProps }),\n    [mediaProps, props]\n  )\n\n  const isLazyEnabled = useMemo(\n    () => isLazySupported && (lazy === true || isObject(lazy)),\n    [lazy]\n  )\n  const lazyOptions = useMemo(() => (isObject(lazy) ? lazy : undefined), [lazy])\n  const [hasIntersected, cardRef] = useIntersectionObserver(\n    isLazyEnabled,\n    lazyOptions\n  )\n\n  const canFetchData = useMemo(\n    () => !isLazyEnabled || (isLazyEnabled && hasIntersected),\n    [isLazyEnabled, hasIntersected]\n  )\n\n  const toFetchData = useCallback(() => {\n    if (canFetchData) {\n      setLoading(true)\n\n      const fetch = fetchData\n        ? fetchFromApi(apiUrl, apiUrlProps)\n        : Promise.resolve({})\n\n      fetch\n        .then(({ data }) => mergeData(data))\n        .catch(error => {\n          setLoading(false)\n          setIsError(true)\n          console.error(`\n┌───────────────┐\n│ Microlink SDK │\n└───────────────┘\n\n${error.description}\n\n${JSON.stringify(error.data)}\n\nid   ${error.headers['x-request-id']}\nuri  ${error.url}\ncode ${error.code} (${error.statusCode})\n\nmicrolink.io/${error.code.toLowerCase()}\n`)\n        })\n    }\n  }, [apiUrl, canFetchData, setData, apiUrlProps.headers['x-api-key'], url])\n\n  const mergeData = useCallback(\n    fetchedData => {\n      const payload = isFunction(setData)\n        ? setData(fetchedData)\n        : { ...fetchedData, ...setData }\n\n      const {\n        title,\n        description,\n        url,\n        video,\n        audio,\n        image,\n        logo,\n        iframe\n      } = payload\n\n      const mediaFallback = image || logo || {}\n      let media = mediaFallback\n      let videoUrl\n      let audioUrl\n      let isVideo = false\n      let isAudio = false\n\n      const preferredMedia = getPreferredMedia(payload, mediaProps)\n\n      switch (preferredMedia) {\n        case 'audio':\n          isAudio = true\n          audioUrl = getUrlPath(audio)\n          break\n        case 'video':\n          isVideo = true\n          videoUrl = getUrlPath(video)\n          break\n        case 'iframe':\n          setIframeMedia(iframe)\n          break\n        default:\n          media = someProp(payload, mediaProps) || mediaFallback\n          break\n      }\n\n      const imageUrl = getUrlPath(media)\n      const { color, background_color: backgroundColor } = media\n\n      updateState({\n        url,\n        color,\n        title,\n        description,\n        imageUrl,\n        videoUrl,\n        audioUrl,\n        isVideo,\n        isAudio,\n        backgroundColor\n      })\n\n      setLoading(false)\n    },\n    [mediaProps, setData]\n  )\n\n  useEffect(toFetchData, [url, setData, hasIntersected])\n\n  const isLoading = isLoadingUndefined ? loadingState : loading\n\n  if (isError) {\n    return (\n      <a href={url} {...restProps}>\n        {url}\n      </a>\n    )\n  }\n\n  if (iframeMedia) {\n    if (!isSSR) {\n      iframeMedia.scripts.forEach(attrs => {\n        const hasScript = document.querySelector(`script[src=\"${attrs.src}\"]`)\n        if (!hasScript) {\n          const script = document.createElement('script')\n          Object.keys(attrs).forEach(key => (script[key] = attrs[key]))\n          document.body.appendChild(script)\n        }\n      })\n    }\n\n    return (\n      <div\n        className={classNames.iframe}\n        dangerouslySetInnerHTML={{ __html: iframeMedia.html }}\n        {...restProps}\n      />\n    )\n  }\n\n  return (\n    <CardWrap\n      className={`${classNames.main} ${className}`.trim()}\n      href={url}\n      isLoading={isLoading}\n      ref={cardRef}\n      {...restProps}\n    >\n      {isLoading ? (\n        <CardEmpty />\n      ) : (\n        <>\n          <CardMedia />\n          <CardContent />\n        </>\n      )}\n    </CardWrap>\n  )\n}\n\nconst Microlink = props => (\n  <GlobalState {...props}>{otherProps => <Card {...otherProps} />}</GlobalState>\n)\n\nMicrolink.defaultProps = {\n  className: '',\n  apiKey: undefined,\n  autoPlay: true,\n  controls: true,\n  direction: 'ltr',\n  lazy: true,\n  loop: true,\n  media: ['iframe', 'video', 'audio', 'image', 'logo'],\n  fetchData: true,\n  muted: true,\n  playsInline: true,\n  size: 'normal'\n}\n\nMicrolink.propTypes = {\n  apiKey: PropTypes.string,\n  autoPlay: PropTypes.bool,\n  contrast: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  controls: PropTypes.bool,\n  direction: PropTypes.string,\n  lazy: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  loop: PropTypes.bool,\n  media: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  mediaRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.elementType })\n  ]),\n  muted: PropTypes.bool,\n  playsInline: PropTypes.bool,\n  prerender: PropTypes.oneOf(['auto', true, false]),\n  size: PropTypes.oneOf(['normal', 'large', 'small']),\n  url: PropTypes.string.isRequired\n}\n\nexport { imageProxy, getApiUrl, fetchFromApi }\n\nexport default Microlink\n"],"names":["NanoClamp","Component","props","state","noClamp","text","t","element","original","lineHeight","start","middle","end","debounced","_this","debounce","action","window","addEventListener","this","clientHeight","clampLines","removeEventListener","func","timeout","later","apply","_this2","callNow","clearTimeout","setTimeout","setState","ellipsis","lines","maxHeight","ellipsisLength","defaultProps","length","Math","floor","innerText","slice","moveMarkers","max","trim","_this3","key","value","accessibility","is","propText","clampProps","ref","e","_this4","node","title","createElement","n","prototype","s","p","REGEX_LOCALHOST","isSSR","isFunction","fn","isObject","obj","_typeof","isNil","getUrlPath","data","url","media","css","getApiUrl","apiKey","contrast","endpoint","force","headers","prerender","proxy","ttl","createApiUrl","audio","includes","iframe","palette","screenshot","video","isLarge","cardSize","isSmall","imageProxy","test","isLocalhostUrl","encodeURIComponent","isLazySupported","formatSeconds","secs","secsToNum","parseInt","filter","v","i","map","join","clampNumber","num","min","CONTENT_BASE_CLASSNAME","MEDIA_BASE_CLASSNAME","CONTROLS_BASE_CLASSNAME","classNames","main","content","description","mediaWrapper","image","videoWrapper","audioWrapper","mediaControls","playbackControl","volumeControl","rwControl","ffwControl","rateControl","progressBar","progressTime","spinner","StyledClamp","styled","children","className","React","useNanoClamp","CardText","textProps","as","speed","short","medium","long","animation","createTransition","properties","suffix","property","transition","font","initialState","GlobalContext","createContext","GlobalState","autoPlay","controls","loop","mediaRef","muted","playsInline","size","rest","useState","updateState","useCallback","newState","currentState","useMemo","values","Provider","REGEX_STRIP_WWW","mobileDescriptionStyle","Content","attrs","Header","Description","Footer","Author","PoweredBy","CardContent","useContext","isSmallCard","formattedUrl","href","URL","hostname","replace","handleOnClick","preventDefault","open","onClick","emptyStatePulse","keyframes","emptyStateImagePulse","emptyStateAnimation","emptyStateImageAnimation","ImageLoadCatcher","loadingOverlay","isLoading","mediaSizeStyles","small","normal","large","StyledWrap","Wrap","ImageWrap","ImageComponent","imageUrl","MediaEmpty","CardImage","HeaderEmpty","DescriptionEmpty","FooterEmpty","CardEmptyState","style","marginBottom","MediaButton","VolumeMute","xmlns","viewBox","fill","fillRule","stroke","strokeWidth","d","transform","VolumeUp","BottomControls","VolumeIcon","VolumeButton","PlaybackRateButton","TimeLabel","right","FooterControls","currentTime","endTime","isMuted","onMuteClick","onPlaybackRateClick","playbackRate","VolumeComponent","isLargeCard","Pause","Play","iconSizes","PlaybackIcon","PlaybackButtonWrap","PlaybackButton","isPlaying","PlaybackComponent","scrubberSizeScales","Scrubber","isVisible","left","positionX","opacity","visibility","scrubberSize","sizeScales","Tooltip","position","isDragging","visible","top","forwardRef","label","heightScales","activeHeightScales","getProgressBarActiveHeight","OuterWrap","PADDING","BarsWrap","activeHeight","height","ProgressLine","ProgressMask","maskScale","ProgressHover","cursorRatio","isHovering","progressPercent","BufferedChunk","ProgressBar","bufferedMedia","cursorX","duration","hoveredTime","onMouseDown","onMouseOver","progress","showTooltip","wrapRef","useRef","tooltipRef","getWrapWidth","current","getBoundingClientRect","width","progressRatio","wrapWidth","startPoint","cursorPosition","toFixed","bufferedMediaChunks","chunk","tooltipLabel","tooltipPositionX","tooltipHalf","mouseEvents","showAccessories","Backward","Forward","SeekIcon","SeekButtonWrap","SeekButton","type","IconComponent","offsetScales","rotate","dash","getSpinnerSize","offset","getSpinnerOffset","Svg","Circle","Spinner","cx","cy","r","SPACE_KEY","L_ARROW_KEY","R_ARROW_KEY","M_KEY","hasInteracted","bg","isPaused","InnerWrap","ControlsTop","Controls","MediaComponent","mediaProps","propRef","setDuration","setProgress","buffered","setBuffered","setCursorX","setHoveredTime","setIsPlaying","setIsMuted","isBuffering","setIsBuffering","setIsHovering","setIsDragging","setPlaybackRate","setHasInteracted","pausedByDrag","setPausedByDrag","setRefs","isNotSmall","mediaEvents","onCanPlay","onLoadedMetadata","currentTarget","onPause","onPlay","onPlaying","onProgress","onRateChange","onTimeUpdate","onVolumeChange","onWaiting","evaluateCursorPosition","event","bounds","cursor","clientX","time","togglePlayback","paused","play","pause","jumpTo","onSeekClick","stopPropagation","rate","getNextPlaybackRate","onProgressBarClick","onProgressBarMouseDown","onProgressBarMouseOver","onWrapClick","onWrapMouseMove","onWrapMouseOver","buttons","onWrapKeyDown","keyCode","outerWrapEvents","onKeyDown","onMouseMove","onMouseOut","outerWrapTitle","_toConsumableArray","Array","keys","index","footerControlsProps","progressBarProps","useEffect","tabIndex","VideoDOM","MEDIA_COMPONENT","videoUrl","src","poster","Image","audioUrl","CardMedia","isAudio","isVideo","setIsLoading","mediaType","getMediaType","onLoad","contrastStyle","backgroundColor","color","largeStyle","hoverStyle","rtlStyle","baseStyle","Element","direction","CardWrap","rel","target","restProps","undefined","Card","fetchData","lazy","loading","mediaProp","setData","concat","loadingState","setLoading","iframeMedia","setIframeMedia","isError","setIsError","isLoadingUndefined","apiUrl","apiUrlProps","isLazyEnabled","lazyOptions","enabled","options","hasIntersected","setHasIntersected","observer","IntersectionObserver","self","entry","isIntersecting","unobserve","observe","useIntersectionObserver","cardRef","canFetchData","toFetchData","fetchFromApi","Promise","resolve","then","mergeData","catch","error","console","JSON","stringify","code","statusCode","toLowerCase","fetchedData","payload","logo","mediaFallback","prefer","getPreferredMedia","find","prop","someProp","background_color","scripts","forEach","document","querySelector","script","Object","body","appendChild","dangerouslySetInnerHTML","__html","html","CardEmpty","Microlink","otherProps"],"mappings":"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"}